{"version":3,"sources":["gui.jsx","grid.js","data.jsx","const.js","viewport.jsx","category.jsx","legend.jsx","rules.jsx","intro.jsx","styles/com.jsx","app.jsx","service-worker.js","index.js"],"names":["gui","_ref","column","basePx","margin","breakpoints","changeData","react_default","a","createElement","lib","expanded","label","value","size","onChange","val","options","Array","from","_","index","Object","keys","map","key","concat","renderBreakpoints","debug","_debug","convertPercent","num","point","arguments","length","undefined","Number","isInteger","toFixed","grid","columnSize","marginInView","list","spans","forEach","push","start","sort","b","_ref2","next","genBreakpointSpans","_ref3","_ref4","slicedToArray","minBreakpoint","maxBreakpoint","epTitle","l","colSize","table","colScale","view","colWidth","_colTol","gutterScale","container","gutterWidth","gutterRelCol","contentInView","run","debugChangeData","React","createContext","Provider","Consumer","UserData","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","saveURL","state","params","URLSearchParams","append","reduce","arr","join","window","history","replaceState","location","pathname","toString","path","get","newState","cloneDeep","set","setState","gutter","width","sidePanel","search","parseInt","parseFloat","isNaN","breakpointsStr","split","item","_item$split","_item$split2","xs","s","m","xl","xxl","data","children","Component","src_const","marginColor","CONSTS","gutterColor","columnColor","printWidthLabel","InlineBlock","styled","target","Container","Column","Gutter","Margin","BG","css","Viewport","height","_this2","_this$state","i","col","re_resizable_lib","onResizeStop","_e","_direction","d","ViewportContainer","viewport","viewport_Viewport","CategoryBG","CategoryInnerBG","Header","HideButton","Category","hide","inner","hideClick","_this$props","title","onClick","assign","Item","legend","legend_BG","legend_Column","legend_Margin","legend_Gutter","rules","rules_BG","href","links","intro","intro_BG","name","url","rel","Section","Info","LegendSection","RulesSection","IntroSection","App","category","app_UserData","categories","min","max","renderCateory","app_BG","renderUserData","Boolean","hostname","match","ReactDOM","render","src_data","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.182a2924.chunk.js","sourcesContent":["import React from 'react';\nimport * as dg from 'dis-gui';\n\nconst addBreakpoint = (_changeData) => (_ep) => {\n    // changeData(`breakpoints.${ep}`);\n};\n\nconst renderBreakpoints = (breakpoints, changeData) => {\n    const keys = Object.keys(breakpoints);\n    return keys.map((key) => <dg.Number\n        key={key}\n        label={key}\n        value={breakpoints[key]}\n        onChange={(val) => changeData(`breakpoints.${key}`, val)}\n    />);\n};\n\nexport default ({\n    column, basePx, margin, breakpoints, changeData,\n}) => <dg.GUI expanded={false} >\n    <dg.Text label=\"Parameters\" />\n    <dg.Number label=\"Column Size\" value={column.size} onChange={(val) => changeData('column.size', val)} />\n    <dg.Select\n        label=\"Base Unit\"\n        value={basePx}\n        options={Array.from(new Array(25), (_, index) => index + 2)}\n        onChange={(val) => changeData('basePx', val)}\n    />\n    <dg.Number label=\"Margin/Viewport\" value={margin} onChange={(val) => changeData('margin', val)} />\n    <dg.Folder label=\"Breakpoints\" expanded >\n        {renderBreakpoints(breakpoints, changeData)}\n        {/*\n        <dg.Button\n            label=\"Add Breakpoint\"\n            onClick={addBreakpoint(changeData)}\n        />\n        */}\n    </dg.Folder>\n</dg.GUI>;\n","import _debug from 'debug';\n\nconst debug = _debug('grid');\n\nfunction convertPercent(num, point = 2) {\n    if (Number.isInteger(num)) {\n        return num;\n    } else {\n        return num.toFixed(point);\n    }\n}\n\nfunction run({\n    columnSize: colSize,\n    minBreakpoint, maxBreakpoint, basePx,\n    marginInView,\n}) {\n    const table = [];\n\n    let colScale = 0;\n    let view = minBreakpoint;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        colScale++;\n\n        const colWidth = basePx * colScale;\n        const _colTol = colWidth * colSize;\n        if (_colTol < minBreakpoint) continue;\n        if (_colTol >= maxBreakpoint) break;\n\n        let gutterScale = 0;\n        let container;\n        do {\n            gutterScale++;\n            const gutterWidth = basePx * gutterScale;\n            container = colSize * colWidth + (colSize - 1) * gutterWidth;\n\n            if (gutterWidth >= (colWidth / 2)) continue;\n\n            view = container / (1 - 2 * marginInView);\n            const margin = view * marginInView;\n\n            if (view < minBreakpoint) continue;\n            if (view > maxBreakpoint) break;\n\n            table.push({\n                colScale, gutterScale,\n                container,\n                colWidth,\n                gutterWidth,\n                margin,\n                view,\n                gutterRelCol: convertPercent(gutterWidth / colWidth),\n                marginInView: convertPercent(100 * margin / view),\n                contentInView: convertPercent(100 * container / view),\n            });\n        } while (container < maxBreakpoint);\n    }\n\n    return table;\n}\n\nconst genBreakpointSpans = (breakpoints) => {\n    const keys = Object.keys(breakpoints);\n    const list = [];\n\n    keys.forEach((key) => {\n        list.push({key, start: breakpoints[key]});\n    });\n    list.sort((a, b) => {\n        return a.start - b.start;\n    });\n\n    const spans = [];\n    list.forEach(({key, start}, index) => {\n        const next = list[index + 1];\n        if (next === undefined) return;\n        spans.push([start, next.start, key]);\n    });\n    return spans;\n};\n\nexport default (basePx, columnSize, marginInView, breakpoints) => {\n    const list = [];\n    const spans = genBreakpointSpans(breakpoints);\n    debug('spans=%O', spans);\n\n    spans.forEach(([minBreakpoint, maxBreakpoint, epTitle]) => {\n        const l = run({\n            columnSize, minBreakpoint, maxBreakpoint, basePx,\n            marginInView,\n        });\n        list.push([epTitle, minBreakpoint, maxBreakpoint, l]);\n    });\n\n    debug('list=%O', list);\n    return list;\n};\n","import React, {Component} from 'react';\nimport {reduce, get, set, cloneDeep} from 'lodash';\nimport _debug from 'debug';\n\nconst debugChangeData = _debug('data:changeData');\n\nconst {Provider, Consumer} = React.createContext('light');\n\nclass UserData extends Component {\n    constructor(props) {\n        super(props);\n\n        const state = {\n            column: {\n                size: null,\n            },\n            // recommended value: 8 or 10. Unit: px\n            basePx: null,\n            // % or px\n            margin: null,\n            breakpoints: {},\n\n            // Optional\n            // gutterWidth: 12,\n            gutter: {\n                width: 10,\n            },\n            container: {},\n            sidePanel: {\n            },\n        };\n\n        const params = new URLSearchParams(window.location.search);\n        state.column.size = parseInt(params.get('columnSize')) || 12;\n        state.basePx = parseInt(params.get('basePx')) || 8;\n        state.margin = Number.parseFloat(params.get('margin'));\n        if (isNaN(state.margin)) state.margin = 0.04;\n\n        const breakpointsStr = params.get('breakpoints');\n        if (breakpointsStr) {\n            const {breakpoints} = state;\n            const arr = breakpointsStr.split(',');\n            arr.forEach((item) => {\n                if (!item) return;\n                const [key, val] = item.split('__');\n                const value = parseInt(val);\n                if (!isNaN(value)) {\n                    breakpoints[key] = value;\n                }\n            });\n        } else {\n            state.breakpoints = {\n                xs: 0,\n                // Small screen / phone\n                s: 528,\n                // Medium screen / tablet\n                m: 768,\n                // Large screen / desktop\n                // l : 992,\n                l: 1056,\n                // Extra large screen / wide desktop\n                xl: 1200,\n                // Extra extra large\n                xxl: 1584,\n            };\n        }\n\n        this.state = state;\n    }\n\n    saveURL = (state) => {\n        const params = new URLSearchParams();\n        params.append('columnSize', state.column.size);\n        params.append('basePx', state.basePx);\n        params.append('margin', state.margin);\n        params.append('breakpoints', reduce(state.breakpoints, (arr, val, key) => {\n            arr.push(`${key}__${val}`);\n            return arr;\n        }, []).join(','));\n\n        if (window.history.replaceState) {\n            window.history.replaceState({}, '', `${window.location.pathname}?${params.toString()}`);\n        }\n    }\n\n    changeData = (path, value) => {\n        if (get(this.state, path) === value) return;\n        const newState = cloneDeep(this.state);\n        debugChangeData('path=%s, value=%s', path, value);\n        set(newState, path, value);\n\n        debugChangeData('newState=%O', newState);\n        this.saveURL(newState);\n        this.setState(newState);\n    }\n\n    render() {\n        return <Provider value={{\n            data: this.state,\n            changeData: this.changeData,\n            saveURL: this.saveURL,\n        }}>\n            {this.props.children}\n        </Provider>;\n    }\n}\n\nexport {Consumer};\n\nexport default UserData;\n","export default {\n    marginColor: '#a1da9f',\n    gutterColor: '#efc2a7',\n    columnColor: '#77a2de',\n};\n","import React, {Component} from 'react';\nimport styled, {css} from 'react-emotion';\nimport Resizable from 're-resizable';\nimport CONSTS from './const';\n\nconst {marginColor, gutterColor, columnColor} = CONSTS;\n\nconst printWidthLabel = ({width}) => (Number.isInteger(width) ? width : width.toFixed(2));\n\nconst InlineBlock = styled.div`\n    position: relative;\n    flex: 1 1 ${(props) => 100 * props.width / props.view}%;\n    height: 100%;\n`;\n\nconst Container = styled(InlineBlock)`\n    display: flex;\n    flex-wrap: nowrap;\n    white-space: nowrap;\n\n    &::before {\n        content: '${printWidthLabel}';\n        color: #797979;\n        position: absolute;\n        top: -56px;\n        font-size: 10px;\n        text-align: center;\n        width: 100%;\n    }\n\n    &::after {\n        content: '';\n        color: blue;\n        position: absolute;\n        top: -36px;\n        left: 0;\n        font-size: 10px;\n        border: 1px dashed #b9b9b9;\n        border-bottom: unset;\n        width: 100%;\n        height: 8px;\n    }\n`;\n\nconst Column = styled(InlineBlock)`\n    background: ${columnColor};\n\n    &::before {\n        content: '${printWidthLabel}';\n        color: ${columnColor};\n        position: absolute;\n        top: -28px;\n        font-size: 10px;\n        text-align: center;\n        width: 100%;\n    }\n\n    &::after {\n        content: '';\n        color: blue;\n        position: absolute;\n        top: -12px;\n        left: 0;\n        font-size: 10px;\n        border: 1px dashed #b9b9b9;\n        border-bottom: unset;\n        width: 100%;\n        height: 8px;\n    }\n\n`;\n\nconst Gutter = styled(InlineBlock)`\n    background: ${gutterColor};\n\n    &::before {\n        content: '${printWidthLabel}';\n        color: ${gutterColor};\n        position: absolute;\n        bottom: -26px;\n        font-size: 10px;\n        text-align: center;\n        width: 100%;\n    }\n\n    &::after {\n        content: '';\n        color: blue;\n        position: absolute;\n        bottom: -10px;\n        left: 0;\n        font-size: 10px;\n        border: 1px dashed #b9b9b9;\n        border-top: unset;\n        width: 100%;\n        height: 8px;\n    }\n\n`;\n\nconst Margin = styled(InlineBlock)`\n    background: ${marginColor};\n\n    &::before {\n        content: '${printWidthLabel}';\n        color: ${marginColor};\n        position: absolute;\n        bottom: -26px;\n        font-size: 10px;\n        text-align: center;\n        width: 100%;\n    }\n\n    &::after {\n        content: '';\n        color: blue;\n        position: absolute;\n        bottom: -10px;\n        left: 0;\n        font-size: 10px;\n        border: 1px dashed #b9b9b9;\n        border-top: unset;\n        width: 100%;\n        height: 8px;\n    }\n`;\n\nconst BG = styled.div`\n    display: flex;\n    flex-wrap: nowrap;\n    height: 100%;\n    position: relative;\n\n    ${(props) => css`\n        padding: 0 ${props.margin || 0}px;\n    `}\n\n    &::before {\n        content: '${(props) => props.view.toFixed(2)}';\n        color: #797979;\n        position: absolute;\n        bottom: -56px;\n        font-size: 10px;\n        text-align: center;\n        width: 100%;\n    }\n\n    &::after {\n        content: '';\n        color: blue;\n        position: absolute;\n        bottom: -38px;\n        left: 0;\n        font-size: 10px;\n        border: 1px dashed #b9b9b9;\n        border-top: unset;\n        width: 100%;\n        height: 8px;\n    }\n`;\n\nclass Viewport extends Component {\n    state = {\n        // view, container, colWidth, gutterWidth, margin, colSize,\n        ...this.props.data,\n        width: this.props.data.view,\n        height: 200,\n    };\n\n    render() {\n        const {\n            view, container, colWidth, gutterWidth, margin, colSize, width, height,\n        } = this.state;\n\n        const list = [];\n        for (let i = 0; i < colSize; i++) {\n            const gutter = <Gutter key={`gutter-${i}`} width={gutterWidth} view={container} />;\n            const col = <Column key={`column-${i}`} width={colWidth} view={container} />;\n            list.push(col);\n            if (i + 1 < colSize) {\n                list.push(gutter);\n            }\n        }\n\n        return <Resizable\n            size={{width, height}}\n            onResizeStop={(_e, _direction, _ref, d) => {\n                this.setState({\n                    width: this.state.width + d.width,\n                    height: this.state.height + d.height,\n                });\n            }}\n        >\n            <BG view={width} >\n                <Margin width={margin} view={view} />\n                <Container width={container} view={view}>\n                    {list}\n                </Container>\n                <Margin width={margin} view={view} />\n            </BG>\n        </Resizable>;\n    }\n}\n\nconst ViewportContainer = styled.div`\n    margin: 0 auto;\n    padding: 60px 40px;\n\n    &:hover {\n        background: #f5f8ff;\n    }\n`;\n\nexport {ViewportContainer};\nexport default (props) => <ViewportContainer>\n    <Viewport data={props} />\n</ViewportContainer>;\n","import React, {Component} from 'react';\nimport styled from 'react-emotion';\nimport Viewport, {ViewportContainer} from './viewport';\n\nconst CategoryBG = styled.div`\n    height: 100%;\n\n    & > header {\n        width: 100%;\n        background: #daffff;\n        padding: 10px 40px;\n\n        h2 {\n            margin: 0;\n        }\n\n        & > div {\n            margin-top: 8px;\n        }\n    }\n`;\n\nconst CategoryInnerBG = styled.div`\n    margin: 30px 0;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n\n    ${ViewportContainer} + ${ViewportContainer} {\n        margin-top: 20px;\n    }\n`;\n\nconst Header = styled.header`\n    position: relative;\n\n    &:hover {\n        cursor: pointer;\n        color: blue;\n    }\n`;\n\nconst HideButton = styled.span`\n    margin-left: 20px;\n`;\n\nclass Category extends Component {\n    state = {\n        hide: true,\n    }\n\n    render() {\n        const {data, title, list} = this.props;\n        const {hide} = this.state;\n        const size = list.length;\n\n        let _button, inner, hideClick;\n        if (hide) {\n            hideClick = () => this.setState({hide: false});\n            _button = <HideButton onClick={hideClick}>[show]</HideButton>;\n        } else {\n            hideClick = () => this.setState({hide: true});\n            _button = <HideButton onClick={hideClick}>[hide]</HideButton>;\n\n            inner = <CategoryInnerBG>\n                {list.map((item) => <Viewport\n                    key={`vp-${item.colWidth}-${item.gutterWidth}-${item.margin}`}\n                    colSize={data.column.size}\n                    {...item}\n                />)}\n                {!size && <ViewportContainer>Not found appropriate solution</ViewportContainer>}\n            </CategoryInnerBG>;\n        }\n\n        return <CategoryBG>\n            <Header onClick={hideClick}>\n                <h2>{title}</h2>\n                <div>\n                    {`${size} solutions`}\n                </div>\n            </Header>\n            {inner}\n        </CategoryBG>;\n    }\n}\n\nexport default Category;\n","import React from 'react';\nimport styled from 'react-emotion';\nimport CONSTS from './const';\n\nconst {marginColor, gutterColor, columnColor} = CONSTS;\n\nconst BG = styled.div``;\nconst Item = styled.span`\n    display: inline-block;\n    width: 80px;\n    height: 22px;\n    margin-right: 10px;\n    background: #77a2de;\n    vertical-align: middle;\n`;\n\nconst Margin = styled(Item)`\n    background: ${marginColor};\n`;\n\nconst Gutter = styled(Item)`\n    background: ${gutterColor};\n`;\n\nconst Column = styled(Item)`\n    background: ${columnColor};\n`;\n\nexport default () => <BG>\n    <div><Column />Column</div>\n    <div><Margin />Margin</div>\n    <div><Gutter />Gutter</div>\n</BG>;\n","import React from 'react';\nimport styled from 'react-emotion';\n\nconst BG = styled.div``;\n\n/* eslint-disable max-len */\n\nexport default () => <BG>\n    <ol>\n        <li>Both widths of Column and Gutter should be multiple of the Base Unit.</li>\n        <li>The width of Margin could be floating number. But designer should rounding it and use integral value for painting.</li>\n        <li>The blank spaces distribution (it means Margin/Viewport) should keep consistent on different devices.</li>\n        <li>Use the <a href=\"https://spec.fm/specifics/8-pt-grid\">soft grid</a>, not hard grid.</li>\n    </ol>\n</BG>;\n","import React from 'react';\nimport styled from 'react-emotion';\n\nconst BG = styled.div`\n    margin: 20px 40px;\n`;\n\nconst links = [\n    ['Responsive layout grid', 'https://material.io/design/layout/responsive-layout-grid.html'],\n    ['The 8-Point Grid System', 'https://builttoadapt.io/intro-to-the-8-point-grid-system-d2573cde8632'],\n];\n\n/* eslint-disable max-len */\n\nexport default () => <BG>\n    <p>\n        This is a tool to preview grid system for design.\n        <br />\n        It will calculate based your Column Size, Base Unit, Margin/Viewport Value and Breakpoints, and generate a set of solutions for different breakpoints.\n    </p>\n\n    <p>\n        Read these articles for reference:\n    </p>\n    <ul>\n        {links.map(([name, url]) => <li key={name}>\n            <a href={url}>{name}</a>\n        </li>)}\n    </ul>\n\n    <p>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/adoyle-h/design-grid-system\">source code</a>\n    </p>\n</BG>;\n","import styled from 'react-emotion';\n\nconst Section = styled.div`\n    section {\n        margin: 20px 40px;\n\n        div + div {\n            margin-top: 6px;\n        }\n    }\n\n    h2 {\n        margin: 0;\n        padding: 10px 40px;\n        width: 100%;\n    }\n`;\n\n\nexport {Section};\n","import React, {Component} from 'react';\nimport styled from 'react-emotion';\nimport 'normalize.css';\nimport GUI from './gui';\nimport grid from './grid';\nimport Data, {Consumer} from './data';\nimport Category from './category';\nimport Legend from './legend';\nimport Rules from './rules';\nimport Intro from './intro';\nimport {Section} from './styles/com';\n\nimport './styles/global.css';\n\nconst BG = styled.div`\n`;\n\nconst Info = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst UserData = styled(Section)`\n    h2 {\n        background: #c2e1ff;\n    }\n`;\n\nconst LegendSection = styled(Section)`\n    h2 {\n        background: #c2caff;\n    }\n`;\n\nconst RulesSection = styled(Section)`\n    flex: 1 1;\n\n    h2 {\n        background: #7bbcfb;\n    }\n`;\n\nconst IntroSection = styled(Section)`\n    flex: 1 1 100%;\n\n    h2 {\n        background: #e1ffd0;\n\n        a {\n            text-decoration: none;\n            color: initial;\n        }\n    }\n`;\n\nclass App extends Component {\n    renderCateory(title, list) {\n        const {data} = this.props;\n        return <Category\n            data={data}\n            key={title}\n            title={title}\n            list={list}\n        />;\n    }\n\n    renderUserData() {\n        const {data} = this.props;\n        return <UserData>\n            <h2>User Settings</h2>\n            <section>\n                <div>Column Size: {data.column.size}</div>\n                <div>Base Unit: {data.basePx}px</div>\n                <div>Margin/Viewport: {data.margin}</div>\n            </section>\n        </UserData>;\n    }\n\n    render() {\n        const {data, changeData} = this.props;\n        const list = grid(data.basePx, data.column.size, data.margin, data.breakpoints);\n\n        const categories = list.map(([epTitle, min, max, l]) =>\n            this.renderCateory(`${epTitle} (${min}, ${max}]`, l));\n\n        return <BG>\n            <Info>\n                <IntroSection>\n                    <h2><a href=\"/\">Design Grid System</a></h2>\n                    <Intro />\n                </IntroSection>\n                {this.renderUserData()}\n                <LegendSection>\n                    <h2>Legend</h2>\n                    <section><Legend /></section>\n                </LegendSection>\n                <RulesSection>\n                    <h2>Rules</h2>\n                    <section><Rules /></section>\n                </RulesSection>\n            </Info>\n            {categories}\n            <GUI {...data} changeData={changeData} />\n        </BG>;\n    }\n}\n\nexport default () => <Data>\n    <Consumer>\n        {(data) => <App {...data} />}\n    </Consumer>\n</Data>;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './service-worker';\n\n// eslint-disable-next-line\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}